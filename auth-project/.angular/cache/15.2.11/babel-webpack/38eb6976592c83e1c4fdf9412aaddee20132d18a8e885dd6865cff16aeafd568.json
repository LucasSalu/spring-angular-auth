{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../service/login.service\";\nexport class GuardsGuard {\n  constructor(router, loginService) {\n    this.router = router;\n    this.loginService = loginService;\n  }\n  canActivate(route, state) {\n    const token = localStorage.getItem('token');\n    this.loginService.isValidToken(token).subscribe({\n      next: response => {\n        console.log(response);\n      },\n      error: err => {}\n    });\n    this.router.navigate(['index']);\n    return false;\n  }\n  static {\n    this.ɵfac = function GuardsGuard_Factory(t) {\n      return new (t || GuardsGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.LoginService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: GuardsGuard,\n      factory: GuardsGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";;;AAQA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,MAAa,EAAUC,YAA0B;IAAjD,WAAM,GAAND,MAAM;IAAiB,iBAAY,GAAZC,YAAY;EAEvD;EACAC,WAAW,CAAEC,KAA6B,EAAEC,KAA0B;IACpE,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE7C,IAAI,CAACN,YAAY,CAACO,YAAY,CAACH,KAAK,CAAC,CAACI,SAAS,CAC7C;MACEC,IAAI,EAAGC,QAAQ,IAAI;QAEfC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACzB,CAAC;MACDG,KAAK,EAAGC,GAAG,IAAI,CACf;KACH,CACA;IAEC,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,OAAO,KAAK;EACd;;;uBApBWlB,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAmB,SAAXnB,WAAW;MAAAoB,YAFV;IAAM;EAAA","names":["GuardsGuard","constructor","router","loginService","canActivate","route","state","token","localStorage","getItem","isValidToken","subscribe","next","response","console","log","error","err","navigate","factory","providedIn"],"sourceRoot":"","sources":["C:\\dev\\projetos\\angular\\auth-project\\src\\app\\guards\\guards.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from '../service/login.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GuardsGuard implements CanActivate {\n  constructor(private router:Router, private loginService: LoginService){\n\n  }\n  canActivate( route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const token = localStorage.getItem('token');\n\n  this.loginService.isValidToken(token).subscribe(\n    {\n      next: (response) => {\n\n          console.log(response);\n      },\n      error: (err) => {\n      }\n  }\n  )\n\n    this.router.navigate(['index']);\n    return false\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}