{"ast":null,"code":"import _asyncToGenerator from \"C:/dev/projetos/angular/auth-project/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { API_PATH } from 'src/enviroments/environment.prod';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LoginService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.baseUrl = API_PATH;\n  }\n  login(loginRequest) {\n    const loginUrl = `${this.baseUrl}/auth/login`;\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    return this.httpClient.post(loginUrl, loginRequest, {\n      headers\n    });\n  }\n  isValidToken(token) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const loginUrl = `${_this.baseUrl}/auth/token`;\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      return yield _this.httpClient.post(loginUrl, {\n        'token': token\n      }, {\n        headers\n      });\n    })();\n  }\n  static {\n    this.ɵfac = function LoginService_Factory(t) {\n      return new (t || LoginService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoginService,\n      factory: LoginService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":";AACA,SAASA,QAAQ,QAAQ,kCAAkC;AAC3D,SAAqBC,WAAW,QAAQ,sBAAsB;;;AAS9D,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,UAAqB;IAArB,eAAU,GAAVA,UAAU;IAD9B,YAAO,GAAEJ,QAAQ;EAC4B;EAE7CK,KAAK,CAACC,YAAiB;IACrB,MAAMC,QAAQ,GAAG,GAAG,IAAI,CAACC,OAAO,aAAa;IAC7C,MAAMC,OAAO,GAAG,IAAIR,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAE,CAAC;IACvE,OAAO,IAAI,CAACG,UAAU,CAACM,IAAI,CAAMH,QAAQ,EAAED,YAAY,EAAE;MAAEG;IAAO,CAAE,CAAC;EACvE;EACOE,YAAY,CAACC,KAAU;IAAA;IAAA;MAC5B,MAAML,QAAQ,GAAG,GAAG,KAAI,CAACC,OAAO,aAAa;MAC7C,MAAMC,OAAO,GAAG,IAAIR,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE,CAAC;MACvE,aAAa,KAAI,CAACG,UAAU,CAACM,IAAI,CAAMH,QAAQ,EAAE;QAAC,OAAO,EAAGK;MAAK,CAAC,EAAE;QAAEH;MAAO,CAAE,CAAC;IAAC;EAEnF;;;uBAfWP,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAW,SAAZX,YAAY;MAAAY,YAFX;IAAM;EAAA","names":["API_PATH","HttpHeaders","LoginService","constructor","httpClient","login","loginRequest","loginUrl","baseUrl","headers","post","isValidToken","token","factory","providedIn"],"sourceRoot":"","sources":["C:\\dev\\projetos\\angular\\auth-project\\src\\app\\service\\login.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { API_PATH } from 'src/enviroments/environment.prod';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../entities/user';\nimport { Observable } from 'rxjs';\nimport { LoginResponse } from '../entities/loginResponse';\nimport { LoginRequest } from '../entities/loginRequest';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  baseUrl= API_PATH;\n  constructor(private httpClient:HttpClient) { }\n\n  login(loginRequest: any): Observable<any> {\n    const loginUrl = `${this.baseUrl}/auth/login`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return this.httpClient.post<any>(loginUrl, loginRequest, { headers });\n  }\n  async  isValidToken(token: any): any {\n    const loginUrl = `${this.baseUrl}/auth/token`;\n    const headers = new HttpHeaders({ 'Content-Type': 'application/json' });\n    return await this.httpClient.post<any>(loginUrl, {'token' : token}, { headers });\n\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}