{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet MyVacanciesComponent = class MyVacanciesComponent {\n  constructor(vacanciesService) {\n    this.vacanciesService = vacanciesService;\n    this.list = [];\n    this.isAdmin = false;\n    this.status = '';\n    this.title = '';\n    this.description = '';\n    this.requirements = '';\n    this.id = '';\n  }\n  ngOnInit() {\n    this.isAdmin = 'admin' == localStorage.getItem('role');\n    this.loadVacancies();\n  }\n  loadVacancies() {\n    this.vacanciesService.getVacancies().subscribe({\n      next: data => {\n        this.list = data;\n      },\n      error: err => {\n        console.error('Erro ao carregar vagas:', err);\n      }\n    });\n  }\n  setModal(status, title, description, requirements, id) {\n    this.status = status;\n    this.title = title;\n    this.requirements = requirements;\n    this.description = description;\n    this.id = id;\n  }\n  deleteVacancy(vacancyId) {\n    this.vacanciesService.deleteVacancy(vacancyId).subscribe({\n      next: data => {\n        console.log('Vaga deletada com sucesso');\n        this.loadVacancies(); // Atualiza a lista após a exclusão\n      },\n\n      error: error => {\n        console.error('Erro ao deletar vaga:', error);\n      }\n    });\n  }\n  updateOrCreate() {\n    this.vacanciesService.updateOrCreate(this.id, this.title, this.description, this.requirements).subscribe({\n      next: () => {\n        console.log('Operação realizada com sucesso');\n        this.loadVacancies(); // Atualiza a lista após a criação/edição\n        this.resetForm(); // Reseta o formulário após salvar\n      },\n\n      error: error => {\n        console.error('Erro ao criar/editar vaga:', error);\n      }\n    });\n  }\n  resetForm() {\n    this.id = undefined;\n    this.title = '';\n    this.description = '';\n    this.requirements = '';\n  }\n};\nMyVacanciesComponent = __decorate([Component({\n  selector: 'app-my-vacancies',\n  templateUrl: './my-vacancies.component.html',\n  styleUrls: ['./my-vacancies.component.css']\n})], MyVacanciesComponent);\nexport { MyVacanciesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAOlC,IAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAY7BC,YAAoBC,gBAAiC;IAAjC,qBAAgB,GAAhBA,gBAAgB;IATpC,SAAI,GAAU,EAAE;IAChB,YAAO,GAAW,KAAK;IAEvB,WAAM,GAAU,EAAE;IAClB,UAAK,GAAU,EAAE;IACjB,gBAAW,GAAU,EAAE;IACvB,iBAAY,GAAU,EAAE;IACxB,OAAE,GAAO,EAAE;EAIX;EAEAC,QAAQ;IACN,IAAI,CAACC,OAAO,GAAG,OAAO,IAAIC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACtD,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAa;IACX,IAAI,CAACL,gBAAgB,CAACM,YAAY,EAAE,CAACC,SAAS,CAAC;MAC7CC,IAAI,EAAGC,IAAI,IAAI;QACb,IAAI,CAACC,IAAI,GAAGD,IAAI;MAClB,CAAC;MACDE,KAAK,EAAGC,GAAG,IAAI;QACbC,OAAO,CAACF,KAAK,CAAC,yBAAyB,EAAEC,GAAG,CAAC;MAC/C;KACD,CAAC;EACJ;EAEAE,QAAQ,CAACC,MAAU,EAAEC,KAAS,EAAEC,WAAe,EAACC,YAAgB,EAAGC,EAAM;IACvE,IAAI,CAACJ,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACE,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACD,WAAW,GAAGA,WAAW;IAC9B,IAAI,CAACE,EAAE,GAAGA,EAAE;EACd;EAEAC,aAAa,CAACC,SAAiB;IAC7B,IAAI,CAACrB,gBAAgB,CAACoB,aAAa,CAACC,SAAS,CAAC,CAACd,SAAS,CAAC;MACvDC,IAAI,EAAGC,IAAI,IAAI;QACbI,OAAO,CAACS,GAAG,CAAC,2BAA2B,CAAC;QACxC,IAAI,CAACjB,aAAa,EAAE,CAAC,CAAE;MACzB,CAAC;;MACDM,KAAK,EAAGA,KAAK,IAAI;QACfE,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;KACD,CAAC;EACJ;EAEAY,cAAc;IACZ,IAAI,CAACvB,gBAAgB,CAACuB,cAAc,CAAC,IAAI,CAACJ,EAAE,EAAE,IAAI,CAACH,KAAK,EAAE,IAAI,CAACC,WAAW,EAAE,IAAI,CAACC,YAAY,CAAC,CAACX,SAAS,CAAC;MACvGC,IAAI,EAAE,MAAK;QACTK,OAAO,CAACS,GAAG,CAAC,gCAAgC,CAAC;QAC7C,IAAI,CAACjB,aAAa,EAAE,CAAC,CAAC;QACtB,IAAI,CAACmB,SAAS,EAAE,CAAC,CAAC;MACpB,CAAC;;MACDb,KAAK,EAAGA,KAAK,IAAI;QACfE,OAAO,CAACF,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;KACD,CAAC;EACJ;EAEAa,SAAS;IACP,IAAI,CAACL,EAAE,GAAGM,SAAS;IACnB,IAAI,CAACT,KAAK,GAAG,EAAE;IACf,IAAI,CAACC,WAAW,GAAG,EAAE;IACrB,IAAI,CAACC,YAAY,GAAG,EAAE;EACxB;CAEH;AAxEYpB,oBAAoB,eALhCD,SAAS,CAAC;EACT6B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,GACW9B,oBAAoB,CAwEhC;SAxEYA,oBAAoB","names":["Component","MyVacanciesComponent","constructor","vacanciesService","ngOnInit","isAdmin","localStorage","getItem","loadVacancies","getVacancies","subscribe","next","data","list","error","err","console","setModal","status","title","description","requirements","id","deleteVacancy","vacancyId","log","updateOrCreate","resetForm","undefined","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\dev\\projetos\\angular\\auth-project\\src\\app\\my-vacancies\\my-vacancies.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-my-vacancies',\n  templateUrl: './my-vacancies.component.html',\n  styleUrls: ['./my-vacancies.component.css']\n})\nexport class MyVacanciesComponent {\n\n\n    list: any[] = [];\n    isAdmin:boolean = false;\n\n    status:string = '';\n    title:string = '';\n    description:string = '';\n    requirements:string = '';\n    id:any = '';\n\n    constructor(private vacanciesService:VacanciesService){\n\n    }\n\n    ngOnInit() {\n      this.isAdmin = 'admin' == localStorage.getItem('role')\n      this.loadVacancies();\n    }\n\n    loadVacancies() {\n      this.vacanciesService.getVacancies().subscribe({\n        next: (data) => {\n          this.list = data;\n        },\n        error: (err) => {\n          console.error('Erro ao carregar vagas:', err);\n        }\n      });\n    }\n\n    setModal(status:any, title:any, description:any,requirements:any,  id:any){\n      this.status = status;\n      this.title = title;\n      this.requirements = requirements;\n      this.description = description;\n      this.id = id;\n    }\n\n    deleteVacancy(vacancyId: number) {\n      this.vacanciesService.deleteVacancy(vacancyId).subscribe({\n        next: (data) => {\n          console.log('Vaga deletada com sucesso');\n          this.loadVacancies();  // Atualiza a lista após a exclusão\n        },\n        error: (error) => {\n          console.error('Erro ao deletar vaga:', error);\n        }\n      });\n    }\n\n    updateOrCreate() {\n      this.vacanciesService.updateOrCreate(this.id, this.title, this.description, this.requirements).subscribe({\n        next: () => {\n          console.log('Operação realizada com sucesso');\n          this.loadVacancies(); // Atualiza a lista após a criação/edição\n          this.resetForm(); // Reseta o formulário após salvar\n        },\n        error: (error) => {\n          console.error('Erro ao criar/editar vaga:', error);\n        }\n      });\n    }\n\n    resetForm() {\n      this.id = undefined;\n      this.title = '';\n      this.description = '';\n      this.requirements = '';\n    }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}